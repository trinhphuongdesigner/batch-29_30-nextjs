import React, { useCallback, useEffect, useState } from "react";
import Head from "next/head";
import PropTypes from "prop-types";

import axiosClient from "../../libraries/axiosClient";
import { useRouter } from "next/router";

function ProductDetail(props) {
  const { post } = props;
  const router = useRouter();

  const [product, setProduct] = useState([]);
  // Call API

  const getProduct = useCallback(async () => {
    try {
      const { id } = router.query;

      const res = await axiosClient.get(`/products/${id}`);

      setProduct(res.data.payload);
    } catch (error) {
      console.log(error);
    }
  }, [router.query]);

  useEffect(() => {
    if (router.isReady) getProduct()
  }, [getProduct, router.isReady]);

  console.log('««««« product »»»»»', product);

  return (
    <>
      <Head>
        <title>Ban chai da nang</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {product && (
        <main>
          <p>
            <strong>name:</strong> {product.name}
          </p>
          <p>
            <strong>description:</strong> {product.description}
          </p>
          {/* <p>
            <strong>userId:</strong> {product.userId}
          </p> */}
          {/* <p>
            <strong>Discount:</strong> {post.discount}%
          </p>
          <p>
            <strong>Total:</strong> {post.total}
          </p>
          <p>
            <strong>Supplier name :</strong> {post.supplier.name}
          </p>
          <p>
            <strong>Supplier email :</strong> {post.supplier.email}
          </p>
          <p>
            <strong>Supplier address :</strong> {post.supplier.address}
          </p> */}
        </main>
      )}
    </>
  );
}

ProductDetail.propTypes = {
  post: PropTypes.instanceOf(Object),
};

ProductDetail.defaultProps = {
  post: {},
};

export default ProductDetail;

// SSG
// export async function getStaticPaths() {
//   try {
//     const response = await axiosClient.get('/products');

//     const paths = response.data.map((post) => ({
//       params: { id: post.id },
//     }))

//     return {
//       paths,
//       fallback: true,
//     }
//   } catch (error) {
//     console.log('««««« error »»»»»', error);
//   }
// }

// export async function getStaticPaths() {
//   return {
//     paths: [],
//     fallback: true,
//   };
// }

// export async function getStaticProps(req) {
//   try {
//     const { params } = req;
//     const response = await axiosClient.get(`/posts/${params.id}`);

//     return {
//       props: {
//         post: response.data,
//       },
//       // revalidate: 10,
//     };
//   } catch (error) {
//     return {
//       notFound: true,
//     };
//   }
// }

// SSR
// export async function getServerSideProps(req) {
//   try {
//     const { params, query } = req;
//     // console.log('««««« req »»»»»', req);
//     const response = await axios.get('http://localhost:9000/products');

//     return {
//       props: {
//         products: response.data,
//       },
//     };
//   } catch (error) {
//     return {
//       notFound: true,
//     };
//   }
// }
